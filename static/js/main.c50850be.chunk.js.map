{"version":3,"sources":["fonts/Comfortaa-VariableFont_wght.ttf","components/Grid/styles.js","components/Grid/index.js","components/Emoji/styles.js","styles/colors.js","components/Emoji/index.js","styles/global.js","components/Buttons/styles.js","components/Buttons/index.js","components/Scoreboard/styles.js","components/Scoreboard/index.js","constants.js","components/Result/styles.js","components/Result/index.js","components/Modal/styles.js","components/Modal/index.js","components/Rules/styles.js","components/Rules/index.js","App.js","index.js"],"names":["module","exports","StyledGrid","styled","div","Grid","children","GradientIcon","css","props","color","StyledIcon","i","size","gradient","Emoji","solid","emoji","ariaLabel","aria-label","className","defaultProps","transitionAllEase","StyledApp","StyledButton","button","IconButton","Global","createGlobalStyle","Comfortaa","Button","options","name","label","Buttons","playGame","map","option","index","key","onClick","StyledScoreboard","Col","Name","p","Points","Title","h2","Scoreboard","points","player","computer","OPTIONS","rock","displayName","wins","paper","scissors","lizard","spock","FailureMessage","SuccessMessage","WaitingMessage","StyledResult","Choice","isPlayer","Message","status","Result","playerChoice","computerChoice","result","message","StyledModal","modalRoot","document","getElementById","Modal","background","React","createRef","useState","fadeType","setFadeType","useEffect","prevProps","setTimeout","isOpen","ReactDom","createPortal","id","role","onTransitionEnd","event","propertyName","onClose","onMouseDown","preventDefault","ref","StyledRules","Rules","modal","toggleModal","App","setPlayerChoice","setComputerChoice","setResult","setPoints","undefined","indexOf","previousPoints","getResult","computerChoices","Math","floor","random","length","getComputerChoice","rootElement","hasChildNodes","hydrate","render"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,yD,wRCEpC,IAAMC,EAAaC,IAAOC,IAAV,KCGR,SAASC,EAAT,GAA6B,IAAbC,EAAY,EAAZA,SAC7B,OACE,kBAACJ,EAAD,KACII,G,mkBCJR,IAAMC,EAAeC,YAAH,KACmD,SAAAC,GAAK,OAAIA,EAAMC,QCL3D,WDW8C,SAAAD,GAAK,OAAIA,EAAMC,QCX7D,WDkBZC,EAAaR,IAAOS,EAAV,KACR,SAAAH,GAAK,OAAIA,EAAMI,QACnB,SAAAJ,GAAK,OAAIA,EAAMC,OCpBD,aDsBrB,SAAAD,GAAK,OAAIA,EAAMK,SAAWP,EAAe,MElB9B,SAASQ,EAAT,GAAoE,IAAnDC,EAAkD,EAAlDA,MAAOF,EAA2C,EAA3CA,SAAUJ,EAAiC,EAAjCA,MAAOO,EAA0B,EAA1BA,MAAOJ,EAAmB,EAAnBA,KAAMK,EAAa,EAAbA,UACnE,OACE,kBAACP,EAAD,CAAYG,SAAUA,EAAUD,KAAMA,EAAMH,MAAOA,EAAOS,aAAYD,EAAWE,UAAS,YAAOJ,EAAO,IAAM,IAApB,eAA8BC,KAI5HF,EAAMM,aAAe,CACnBL,OAAO,EACPF,UAAU,EACVJ,MAAO,I,inDCNF,IAAMY,EAAiB,iCAEjBC,EAAYpB,IAAOC,IAAV,KAQToB,EAAerB,IAAOsB,OAAV,IFhBC,UACC,UAFF,UE4BpBH,EAGEA,EF/BkB,UAEE,WEmCdI,EAAavB,IAAOS,EAAV,IFpCG,WE4Cbe,EAASC,YAAH,IAGJC,IFhDU,UACC,W,4QGGnB,IAAMC,EAAS3B,IAAOsB,OAAV,IAOfH,EAGEA,GCNAS,EAAU,CACd,CACEC,KAAM,OACNC,MAAO,QACPhB,MAAO,YACPP,MAAO,WACN,CACDsB,KAAM,QACNC,MAAO,QACPhB,MAAO,aACPP,MAAO,WACN,CACDsB,KAAM,WACNC,MAAO,UACPhB,MAAO,gBACPP,MAAO,WACN,CACDsB,KAAM,SACNC,MAAO,UACPhB,MAAO,cACPP,MAAO,WACN,CACDsB,KAAM,QACNC,MAAO,QACPhB,MAAO,aACPP,MAAO,YAII,SAASwB,EAAT,GAAgC,IAAbC,EAAY,EAAZA,SAChC,OACE,kBAAC9B,EAAD,KACG0B,EAAQK,KAAI,SAACC,EAAQC,GAAT,OACX,kBAACR,EAAD,CAAQS,IAAG,iBAAYD,GAASE,QAAS,kBAAML,EAASE,EAAOL,QAC7D,kBAACjB,EAAD,CAAOD,UAAQ,EAACD,KAAM,EAAGH,MAAO2B,EAAO3B,MAAOQ,UAAWmB,EAAOJ,MAAOhB,MAAOoB,EAAOpB,a,owBCtCxF,IAAMwB,EAAmBtC,IAAOC,IAAV,ILHH,UADD,qBKaZsC,EAAMvC,IAAOC,IAAV,KASHuC,EAAOxC,IAAOyC,EAAV,KAMJC,EAAS1C,IAAOyC,EAAV,KAKNE,EAAQ3C,IAAO4C,GAAV,KCvBH,SAASC,EAAT,GAAiC,IAAXC,EAAU,EAAVA,OACnC,OACE,kBAACR,EAAD,KACE,kBAACK,EAAD,eACA,kBAACzC,EAAD,KACE,kBAACqC,EAAD,CAAKtB,UAAU,YACb,kBAACuB,EAAD,KAAM,kBAAC5B,EAAD,CAAOC,OAAK,EAACH,KAAM,EAAGH,MNfZ,UMe+BQ,UAAU,mBAAmBD,MAAM,WAClF,kBAAC4B,EAAD,KAASI,EAAOC,SAElB,kBAACR,EAAD,KACE,kBAACC,EAAD,KAAM,kBAAC5B,EAAD,CAAOC,OAAK,EAACH,KAAM,EAAGH,MNnBZ,UMmB+BQ,UAAU,mBAAgBD,MAAM,WAC/E,kBAAC4B,EAAD,KAASI,EAAOE,aCrBnB,IAAMC,EAAU,CACrBC,KAAM,CACJC,YAAa,QACbC,KAAM,CAAC,SAAU,aAEnBC,MAAO,CACLF,YAAa,QACbC,KAAM,CAAC,OAAQ,UAEjBE,SAAS,CACPH,YAAa,UACbC,KAAM,CAAC,QAAS,WAElBG,OAAQ,CACNJ,YAAa,UACbC,KAAM,CAAC,QAAS,UAElBI,MAAO,CACLL,YAAa,QACbC,KAAM,CAAC,WAAY,U,svBCfvB,IAAMK,EAAiBpD,YAAH,IRFO,WQMrBqD,EAAiBrD,YAAH,IRLQ,WQStBsD,GAAiBtD,YAAH,KAIPuD,GAAe5D,IAAOC,IAAV,KAUZ4D,GAAS7D,IAAOyC,EAAV,KAIf,SAAAnC,GAAK,OAAKA,EAAMwD,SAAW,sBAAwB,MAG1CC,GAAU/D,IAAOyC,EAAV,KAKhB,SAAAnC,GAAK,MAAsB,YAAjBA,EAAM0D,OAAuBN,EAAkC,WAAjBpD,EAAM0D,OAAsBP,EAAkC,YAAjBnD,EAAM0D,OAAuBL,GAAiB,MC/BxI,SAASM,GAAT,GAA0D,IAAxCC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,eAAgBC,EAAS,EAATA,OAC7D,OACE,kBAACR,GAAD,KACIM,GAAgB,kBAACL,GAAD,CAAQC,UAAQ,GAAhB,YAAyBb,EAAQiB,GAAcf,aAC/DgB,GAAkB,kBAACN,GAAD,oBAAsBZ,EAAQkB,GAAgBhB,aAClE,kBAACY,GAAD,CAASC,OAASI,EAAOJ,QAAWI,EAAOC,U,ywCCV1C,IAAMC,GAActE,IAAOC,IAAV,MCGlBsE,GAAYC,SAASC,eAAe,cAE3B,SAASC,GAAOpE,GAC7B,IAAMqE,EAAaC,IAAMC,YADW,EAEJD,IAAME,SAAS,IAFX,mBAE7BC,EAF6B,KAEnBC,EAFmB,KAyBpC,OArBAJ,IAAMK,WAAU,SAACC,GACfC,YAAW,kBAAMH,EAAY,QAAO,IAE/B1E,EAAM8E,QAAUF,EAAUE,QAC7BJ,EAAY,SAEb,CAAC1E,EAAM8E,SAeHC,IAASC,aACd,kBAAChB,GAAD,CACEiB,GAAG,cACHC,KAAK,SACLvE,UAAS,uBAAkB8D,GAC3BU,gBAlBJ,SAAwBC,GACK,YAAvBA,EAAMC,cAA2C,OAAbZ,GAEvB,QAAbA,GACFzE,EAAMsF,YAgBN,yBAAK3E,UAAU,cACb,yBAAKA,UAAU,cACb,wBAAIA,UAAU,aAAd,WAIF,yBAAKA,UAAU,eAAf,6EAEE,4BACE,mDACA,iDACA,oDACA,sDACA,wDACA,wDACA,kDACA,kDACA,oDACA,uDAIN,yBACEA,UAAU,aACV4E,YApCN,SAAsBH,GACpBA,EAAMI,iBACNd,EAAY,QAmCRe,IAAKpB,KAGTJ,I,6YC/DG,IAAMyB,GAAchG,IAAOC,IAAV,MAKX0B,GAAS3B,IAAOsB,OAAV,KASdH,GCZU,SAAS8E,GAAT,GAAwD,EAAvC/B,aAAuC,EAAzBC,eAAyB,EAATC,OAAU,IAAD,EACxCQ,IAAME,UAAS,GADyB,mBAC9DoB,EAD8D,KACvDC,EADuD,KAGrE,OACE,kBAACH,GAAD,KACE,iRAEE,kBAAC,GAAD,CAAQ3D,QAAS,kBAAM8D,GAAaD,IAAQlF,aAAW,cAAvD,gBAGDkF,GAAS,kBAACxB,GAAD,CAAOU,OAAQc,EAAON,QAASO,KCwChC,SAASC,KAAO,IAAD,EACYxB,IAAME,SAAS,IAD3B,mBACrBZ,EADqB,KACPmC,EADO,OAEgBzB,IAAME,SAAS,IAF/B,mBAErBX,EAFqB,KAELmC,EAFK,OAGA1B,IAAME,SAAS,CAAET,QAAS,GAAIL,OAAQ,KAHtC,mBAGrBI,EAHqB,KAGbmC,EAHa,OAIA3B,IAAME,SAAS,CAAE/B,OAAQ,EAAGC,SAAU,IAJtC,mBAIrBF,EAJqB,KAIb0D,EAJa,KAa5B,OAFA5B,IAAMK,WAAU,kBAhDlB,SAAmBf,EAAcC,EAAgBoC,EAAWC,QAC7BC,IAA1BxD,EAAQiB,GACTqC,EAAU,CACRlC,QAAS,qCACTL,OAAQ,YAEFE,IAAiBC,EACzBoC,EAAU,CACRlC,QAAS,aACTL,OAAQ,KAKPf,EAAQiB,GAAcd,KAAKsD,QAAQvC,IAAmB,GACvDoC,EAAU,CACRlC,QAAS,uBACTL,OAAQ,YAGVwC,GAAU,SAAAG,GAAc,kCAASA,GAAT,IACtB5D,OAAQ4D,EAAe5D,OAAS,SAIlCwD,EAAU,CACRlC,QAAS,0BACTL,OAAQ,WAGVwC,GAAU,SAAAG,GAAc,kCAASA,GAAT,IACtB3D,SAAU2D,EAAe3D,SAAW,QAiBpB4D,CAAU1C,EAAcC,EAAgBoC,EAAWC,KAAY,CAACtC,EAAcC,IAGlG,kBAAC/C,EAAD,KACE,kBAACI,EAAD,MACA,kBAACyE,GAAD,MACA,kBAAClE,EAAD,CAASC,SAXI,SAACkC,GAChBmC,EAAgBnC,GAChBoC,EAlDJ,WACE,IAAMO,EAAkB,CAAC,OAAO,QAAQ,WAAY,SAAU,SAC9D,OAAOA,EAAgBC,KAAKC,MAAMD,KAAKE,SAASH,EAAgBI,SAgD5CC,OAUhB,kBAACjD,GAAD,CACEG,OAASA,EACTF,aAAeA,EACfC,eAAiBA,IAEnB,kBAACtB,EAAD,CAAYC,OAAQA,IAEpB,kBAACzB,EAAD,CAAcgB,QAAS,kBAAMmE,EAAU,CAACzD,OAAQ,EAAGC,SAAU,KAAKhC,aAAW,kBAC3E,kBAACO,EAAD,KACE,kBAACX,EAAD,CAAOC,OAAK,EAACF,UAAQ,EAACD,KAAM,EAAGH,MdjFd,UciFkCQ,UAAU,sBAAmBD,MAAM,WAF1F,iBC7EN,IAAMqG,GAAc3C,SAASC,eAAe,QACxC0C,GAAYC,gBACdC,kBAAQ,kBAACjB,GAAD,MAASe,IAEjBG,iBAAO,kBAAClB,GAAD,MAASe,M","file":"static/js/main.c50850be.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Comfortaa-VariableFont_wght.f40889ca.ttf\";","import styled from \"styled-components\";\n\nexport const StyledGrid = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { StyledGrid } from './styles'; \n\nexport default function Grid({ children }) {\n  return (\n    <StyledGrid>\n      { children }\n    </StyledGrid>\n  );\n}\n\nGrid.propTypes = {\n  children: PropTypes.node.isRequired\n};\n","import styled, { css } from \"styled-components\";\n\nimport { darkColor } from '../../styles/colors';\n\nconst GradientIcon = css`\n  background: -webkit-gradient(linear, left top, left bottom, from(${props => props.color}), to(${darkColor}));\n  display: initial;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n\n  &:before {\n    background: -webkit-gradient(linear, left top, left bottom, from(${props => props.color}), to(${darkColor}));\n    display: initial;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n`;\n\nexport const StyledIcon = styled.i`\n  font-size: ${props => props.size}rem;\n  color: ${props => props.color || darkColor};\n  \n  ${props => props.gradient ? GradientIcon : ''}\n`;\n","export const darkColor = '#5E4343';\nexport const lightColor = \"#EBE6CF\";\nexport const dangerColor = '#A42323';\nexport const successColor = '#205320';","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledIcon } from './styles.js';\n\nexport default function Emoji({ solid, gradient, color, emoji, size, ariaLabel }) {\n  return (\n    <StyledIcon gradient={gradient} size={size} color={color} aria-label={ariaLabel} className={`fa${solid ?'s' : 'r'} fa-${emoji}`}></StyledIcon>\n  );\n}\n\nEmoji.defaultProps = {\n  solid: false,\n  gradient: false,\n  color: ''\n};\n\nEmoji.propTypes = {\n  size: PropTypes.number.isRequired,\n  emoji: PropTypes.string.isRequired,\n  ariaLabel: PropTypes.string.isRequired,\n  solid: PropTypes.bool,\n  gradient: PropTypes.bool,\n  color: PropTypes.string\n};\n\n","import styled, { createGlobalStyle } from \"styled-components\";\nimport { dangerColor, darkColor, lightColor } from \"./colors\";\n\nimport Comfortaa from '../fonts/Comfortaa-VariableFont_wght.ttf';\n\nimport \"font-awesome/css/font-awesome.css\";\n\nexport const transitionAllEase = `transition: all 0.2s ease-out;`;\n\nexport const StyledApp = styled.div`\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const StyledButton = styled.button`\n  border: none;\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: bold;\n  border-radius: 20px;\n  color: ${lightColor};\n  padding: 0.5rem 1rem 0.5rem 3rem;\n  background-image: linear-gradient(to bottom right, #d50000, ${dangerColor});\n  box-shadow: -2px 2px 6px ${darkColor};\n\n  ${ transitionAllEase }\n\n  &:hover {\n    ${ transitionAllEase }\n    box-shadow: -2px 2px 10px ${darkColor};\n    background-image: linear-gradient(to bottom right, ${dangerColor}, #de3535, #d50000);\n  }\n`;\n\nexport const IconButton = styled.i`\n  position: absolute;\n  border-radius: 100%;\n  padding: 0.7rem 0.8rem;\n  margin: -0.6rem -3.2rem;\n  background-color: ${lightColor};\n`;\n\nexport const Global = createGlobalStyle`\n  @font-face {\n    font-family: 'Comfortaa';\n    src: url(${Comfortaa});\n  }\n\n  html, body {\n    margin: 0;\n    height: 100vh;\n    font-size: 16px;\n    color: ${darkColor};\n    background-color: ${lightColor};\n    text-rendering: optimizeLegibility !important; /* optimizes text rendering */\n    -webkit-font-smoothing: antialiased !important; /* optimizes text rendering */\n    font-family: 'Comfortaa', cursive;\n\n    button:focus {\n      outline: 0;\n    }\n\n    @media screen and (max-width: 768px) {\n      font-size: 14px;\n    }\n\n    @media screen and (max-width: 480px) {\n      font-size: 12px;\n    }\n\n    @media screen and (max-width: 320px) {\n      font-size: 10px;\n    }\n  }\n`;","import styled from \"styled-components\";\n\nimport { transitionAllEase } from '../../styles/global';\n\nexport const Button = styled.button`\n  border: none;\n  cursor: pointer;\n  font-size: 4rem;\n  background: none;\n  text-shadow: 0px 0px 4px #5e434361;\n\n  ${transitionAllEase}\n\n  &:hover {\n    ${transitionAllEase}\n    text-shadow: -4px 6px 6px #5e434361;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Grid from '../Grid';\nimport Emoji from '../Emoji';\n\nimport { Button } from './styles'; \n\nconst options = [\n  {\n    name: 'rock',\n    label: 'pedra',\n    emoji: 'hand-rock',\n    color: '#afc8d3'\n  }, {\n    name: 'paper',\n    label: 'papel',\n    emoji: 'hand-paper',\n    color: '#CE5788'\n  }, {\n    name: 'scissors',\n    label: 'tesoura',\n    emoji: 'hand-scissors',\n    color: '#8982ec'\n  }, {\n    name: 'lizard',\n    label: 'lagarto',\n    emoji: 'hand-lizard',\n    color: '#1de464'\n  }, {\n    name: 'spock',\n    label: 'spock',\n    emoji: 'hand-spock',\n    color: '#d487a7'\n  }\n];\n\nexport default function Buttons({ playGame }) {\n  return (\n    <Grid>\n      {options.map((option, index) => (\n        <Button key={`button_${index}`} onClick={() => playGame(option.name)}>\n          <Emoji gradient size={4} color={option.color} ariaLabel={option.label} emoji={option.emoji}/>\n        </Button>\n      ))}\n    </Grid>\n  );\n}\n\nButtons.propTypes = {\n  playGame: PropTypes.func.isRequired\n};","import styled from \"styled-components\";\n\nimport { darkColor, lightColor } from \"../../styles/colors\";\n\nexport const StyledScoreboard = styled.div`\n  margin: 1rem;\n  padding: 0.2rem;\n  text-align: center;\n  color: ${lightColor};\n  box-shadow: 0 0 4px ${darkColor};\n  background-image: linear-gradient(to bottom right, #795757e8, ${darkColor});\n`;\n\nexport const Col = styled.div`\n  min-width: 8rem;\n  margin-bottom: 1rem;\n\n  &.left-col {\n    border-right: 1px solid #7967678c;\n  }\n`;\n\nexport const Name = styled.p`\n  font-size: 2rem;\n  margin-top: 0.2rem;\n  margin-bottom: 0.8rem;\n`;\n\nexport const Points = styled.p`\n  margin: 0.5rem 0;\n  font-size: 1.6rem;\n`;\n\nexport const Title = styled.h2`\n  flex-direction: row;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { lightColor } from \"../../styles/colors\";\n\nimport Emoji from '../Emoji';\nimport Grid from '../Grid';\n\nimport { Col, Name, Points, StyledScoreboard, Title } from './styles';\n\nexport default function Scoreboard({ points }) {\n  return (\n    <StyledScoreboard>\n      <Title>Placar</Title>\n      <Grid>\n        <Col className=\"left-col\"> \n          <Name><Emoji solid size={2} color={lightColor} ariaLabel=\"emoji de sorriso\" emoji=\"smile\"/></Name>\n          <Points>{points.player}</Points>\n        </Col>\n        <Col>\n          <Name><Emoji solid size={2} color={lightColor} ariaLabel=\"emoji de robô\" emoji=\"robot\"/></Name>\n          <Points>{points.computer}</Points>\n        </Col>\n      </Grid>\n    </StyledScoreboard>\n  );\n}\n\nScoreboard.propTypes = {\n  points: PropTypes.objectOf(PropTypes.number).isRequired\n};","export const OPTIONS = {\n  rock: {\n    displayName: 'Pedra',\n    wins: ['lizard', 'scissors']\n  },\n  paper: {\n    displayName: 'Papel', \n    wins: ['rock', 'spock']\n  },\n  scissors:{\n    displayName: 'Tesoura',\n    wins: ['paper', 'lizard']\n  },\n  lizard: {\n    displayName: 'Lagarto',\n    wins: ['spock', 'paper']\n  },\n  spock: {\n    displayName: 'Spock',\n    wins: ['scissors', 'rock']\n  }\n}","import styled, { css } from \"styled-components\";\n\nimport { dangerColor, successColor } from \"../../styles/colors\";\n\nconst FailureMessage = css`\n  color: ${dangerColor};\n`;\n\nconst SuccessMessage = css`\n  color: ${successColor};\n`;\n\nconst WaitingMessage = css`\n  font-size: 1rem;\n`;\n\nexport const StyledResult = styled.div`\n  display: flex;\n  margin-top: 1rem;\n  min-height: 8rem;\n  text-align: center;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const Choice = styled.p`\n  font-size: 0.85rem;\n  margin: 0;\n\n  ${props => (props.isPlayer ? 'font-size: 0.75rem;' : '')}\n`;\n\nexport const Message = styled.p`\n  margin-bottom: 0;\n  font-size: 1.2rem;\n  font-weight: bold;\n\n  ${props => (props.status === 'victory' ? SuccessMessage : props.status === 'defeat' ? FailureMessage : props.status === 'waiting' ? WaitingMessage : '')}\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { OPTIONS } from '../../constants';\n\nimport { Choice, StyledResult, Message } from './styles.js';\n\nexport default function Result({ playerChoice, computerChoice, result}) {\n  return (\n    <StyledResult>\n      { playerChoice && <Choice isPlayer>Você: { OPTIONS[playerChoice].displayName }</Choice> }\n      { computerChoice && <Choice>Computador: { OPTIONS[computerChoice].displayName }</Choice> }\n      <Message status={ result.status }>{ result.message }</Message>\n    </StyledResult>\n  );\n}\n\nconst options = ['rock', 'paper', 'scissors', 'lizard', 'spock', ''];\n\nResult.propTypes = {\n  playerChoice: PropTypes.oneOf(options).isRequired,\n  computerChoice: PropTypes.oneOf(options).isRequired,\n  result: PropTypes.exact({\n    status: PropTypes.oneOf(['victory', 'defeat', 'waiting', '']),\n    message: PropTypes.string\n  }).isRequired\n};","import styled from \"styled-components\";\n\nexport const StyledModal = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  opacity: 0;\n  display: flex;\n  z-index: 2000;\n  align-items: center;\n  justify-content: center;\n  transition: opacity linear 0.15s;\n\n  &.fade-in {\n    opacity: 1;\n    transition: opacity linear 0.15s;\n  }\n\n  &.fade-out {\n    opacity: 0;\n    transition: opacity linear 0.15s;\n  }\n\n  .background {\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    outline: 0;\n    position: fixed;\n    background: rgba(0, 0, 0, 0.5);\n  }\n\n  .box-dialog {\n    z-index: 1;\n    border: none;\n    max-width: 90%;\n    border-radius: 5px;\n    background-color: #fefefe;\n    box-shadow: 0 3px 9px rgba(0, 0, 0, 0.5);\n    \n    .box-content {\n      font-size: 0.85rem;\n      padding: 0px 10px 5px;\n    }\n    \n    .box-header {\n      display: flex;\n      padding: 5px 10px;\n      align-items: center;\n      justify-content: space-between;\n      \n      .box-title {\n        margin: 0;\n        display: flex;\n        font-size: 1rem;\n        font-weight: bold;\n        align-items: center;\n        \n        .box-icon {\n          font-size: 28px;\n          margin-right: 10px;\n        }\n      }\n    }\n  }\n`;","import React from \"react\";\nimport ReactDom from \"react-dom\";\n\nimport {  StyledModal } from \"./styles\";\n\nconst modalRoot = document.getElementById(\"modal-root\"); // get div in html public\n\nexport default function Modal (props) {\n  const background = React.createRef(); // create reference to component\n  const [fadeType, setFadeType] = React.useState('');\n\n  React.useEffect((prevProps) => { // sets fade in whenever isOpen is true\n    setTimeout(() => setFadeType(\"in\"), 0);\n\n    if (!props.isOpen && prevProps.isOpen) {\n      setFadeType(\"out\");\n    }\n  }, [props.isOpen]);\n\n  function transitionEnd (event) {\n    if (event.propertyName !== \"opacity\" || fadeType === \"in\") return; // if not opacity, done\n\n    if (fadeType === \"out\") { // if fade out, calls onClose function declared in App\n      props.onClose();\n    }\n  };\n\n  function handleClick (event) { // sets fade out when clicked outside the popup window\n    event.preventDefault();\n    setFadeType(\"out\");\n  };\n\n  return ReactDom.createPortal( // makes a portal to render component outside DOM hierarchy\n    <StyledModal\n      id='popup-rules'\n      role=\"dialog\"\n      className={`wrapper fade-${fadeType}`}\n      onTransitionEnd={transitionEnd}\n    >\n      <div className=\"box-dialog\">\n        <div className=\"box-header\">\n          <h4 className=\"box-title\">\n            Regras\n          </h4>\n        </div>\n        <div className=\"box-content\">\n          O jogo funciona da mesma forma que o jo-ken-po original. As regras são:\n          <ul>\n            <li>Tesoura corta papel</li>\n            <li>Papel cobre pedra</li>\n            <li>Pedra esmaga lagarto</li>\n            <li>Lagarto envenena Spock</li>\n            <li>Spock ou derrete tesoura</li>\n            <li>Tesoura decapita lagarto</li>\n            <li>Lagarto come papel</li>\n            <li>Papel refuta Spock</li>\n            <li>Spock vaporiza pedra</li>\n            <li>Pedra amassa tesoura</li>\n          </ul>\n        </div>\n      </div>\n      <div\n        className=\"background\"\n        onMouseDown={handleClick}\n        ref={background}\n      />\n    </StyledModal>,\n    modalRoot\n  );\n}","import styled from \"styled-components\";\n\nimport { transitionAllEase } from '../../styles/global';\n\nexport const StyledRules = styled.div`\n  margin: 2rem;\n  text-align: center;\n`;\n\nexport const Button = styled.button`\n  border: none;\n  color: inherit;\n  cursor: pointer;\n  font-size: inherit;\n  font-family: inherit;\n  background: transparent;\n  text-decoration: underline;\n\n  ${ transitionAllEase }\n\n  &:hover {\n    color: brown;\n  }\n`;\n","import React from 'react';\n\nimport Modal from '../Modal'; \n\nimport { Button, StyledRules } from './styles.js';\n\nexport default function Rules({ playerChoice, computerChoice, result}) {\n  const [modal, toggleModal] = React.useState(false);\n\n  return (\n    <StyledRules>\n      <p>\n        Pedra-papel-tesoura-lagarto-Spock é uma expansão do clássico método de seleção em jogo de pedra-papel-tesoura. O jogo foi inventado por Sam Kass e Karen Bryla, como \"Rock Paper Scissors Lizard Spock\". Para entender as regras, \n        <Button onClick={() => toggleModal(!modal)} aria-label=\"ver regras\">clique aqui</Button>\n      </p>\n\n      {modal && <Modal isOpen={modal} onClose={toggleModal} /> }\n    </StyledRules>\n  );\n}\n","import React from 'react';\n\nimport Buttons from './components/Buttons';\nimport Emoji from './components/Emoji';\nimport Scoreboard from './components/Scoreboard'; \nimport Result from './components/Result'; \nimport Rules from './components/Rules';\n\nimport { OPTIONS } from './constants';\n\nimport { dangerColor } from \"./styles/colors\";\n\nimport { Global, IconButton, StyledApp, StyledButton  } from './styles/global'; \n\nfunction getComputerChoice() { // returns one of choices randomly\n  const computerChoices = ['rock','paper','scissors', 'lizard', 'spock'];\n  return computerChoices[Math.floor(Math.random()*computerChoices.length)];\n}\n\nfunction getResult(playerChoice, computerChoice, setResult, setPoints) {\n  if(OPTIONS[playerChoice] === undefined) {\n    setResult({\n      message: \"Escolha uma das opções acima\",\n      status: 'waiting'\n    });\n  } else if(playerChoice === computerChoice) {\n    setResult({\n      message: \"Empate --'\",\n      status: ''\n    });\n  } else {\n    // if you find the bot option within the winning options of the player’s choice, it means that the player won\n    \n    if(OPTIONS[playerChoice].wins.indexOf(computerChoice) > -1) {\n      setResult({\n        message: \"Você ganhou! \\\\o/\",\n        status: \"victory\"\n      });\n\n      setPoints(previousPoints => ({...previousPoints,\n        player: previousPoints.player + 1 // counts player score\n      }));\n\n    } else {\n      setResult({\n        message: \"Computador ganhou... :(\",\n        status: \"defeat\"\n      });\n\n      setPoints(previousPoints => ({...previousPoints,\n        computer: previousPoints.computer + 1 // counts bot score\n      }));\n    }\n  }\n}\n\nexport default function App() {\n  const [playerChoice, setPlayerChoice] = React.useState('');\n  const [computerChoice, setComputerChoice] = React.useState('');\n  const [result, setResult] = React.useState({ message: '', status: '' });\n  const [points, setPoints] = React.useState({ player: 0, computer: 0});\n\n  const playGame = (playerChoice) => {\n    setPlayerChoice(playerChoice);\n    setComputerChoice(getComputerChoice());\n  }\n\n  React.useEffect(() => getResult(playerChoice, computerChoice, setResult, setPoints), [playerChoice, computerChoice])\n\n  return (\n    <StyledApp>\n      <Global />\n      <Rules />\n      <Buttons playGame={ playGame } />\n      <Result\n        result={ result }\n        playerChoice={ playerChoice } \n        computerChoice={ computerChoice } \n      />\n      <Scoreboard points={points} />\n      \n      <StyledButton onClick={() => setPoints({player: 0, computer: 0})} aria-label=\"resetar pontos\">\n        <IconButton>\n          <Emoji solid gradient size={1} color={dangerColor} ariaLabel=\"ícone de lixeira\" emoji=\"trash\"/>\n        </IconButton>\n        Limpar placa\n      </StyledButton>\n    </StyledApp>\n  );\n}\n","import React from 'react';\nimport { hydrate, render } from 'react-dom';\nimport App from './App';\n\nconst rootElement = document.getElementById(\"root\");\nif (rootElement.hasChildNodes()) {\n  hydrate(<App />, rootElement);\n} else {\n  render(<App />, rootElement);\n}"],"sourceRoot":""}